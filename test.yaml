# Natural keyboard orienation is when buttons are on the left
# side and knobs are on the right. However you may want to use
# keyboard in another orienation. To avoid remapping button
# positions in your head, just given it here.
# Possible values are:
#   (horizontal)
#   - 'normal': button on the left, knobs on the right
#   - 'upsidedown': button on the right, knobs on the left
#   (vertical)
#   - 'clockwise': button on the top, knobs on the bottom
#   - 'counterclockwise': button on the bottom, knobs on the top
orientation: counterclockwise

# There are different models of keyboard with different number
# buttons and knobs. Write it here for proper handling.
# Count rows and columns when keyboard is in normal orienation,
# with knobs on the right side.
rows: 2
columns: 3
knobs: 1

# Layers are alternative key mappings which may be programmed.
# Current layer is changed using button on the side of keyboard
# and displayed with LEDs on top (only for the moment of changing).
# All keyboards I saw had three layers, but I suppose other variants
# exist.
layers:
  - buttons:
      # Array of buttons. In horizontal orienations it's `rows` rows
      # `columns` buttons each. In vertical: `columns` rows
      # `rows` buttons each.
      # Each entry is either a sequence of 'accords' or mouse event.
      # Accord is aÂ combination of key with optional modifiers,
      # like 'b', 'ctrl-alt-a' or 'win-rctrl-backspace'. It can also
      # be just modifiers without key: 'ctrl-alt'.
      # You may combine several accords into sequence using comma: 'ctrl-v,ctrl-c'.
      - ["a", "ctrl-a"]
      - ["e", "f"]
      # Arbitrary scan code may be given like this: "<101>", code is decimal.
      - ["<100>", "<22>"]
    knobs:
      # Knobs are numbered from left to right in horizontal orientation
      # and from top to bottom in vertical one.
      # Knobs can be rotated either counter-clockwise (ccw) or clockwise (cw)
      # and pressed.
      - ccw: 'wheelup'
        press: 'click'
        cw: 'wheeldown'
